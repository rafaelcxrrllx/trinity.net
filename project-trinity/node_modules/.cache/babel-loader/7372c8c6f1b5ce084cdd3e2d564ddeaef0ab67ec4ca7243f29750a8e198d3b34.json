{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{motion,AnimatePresence}from\"framer-motion\";import logo from'./trinity.svg';import'./LoadingScreen.css';import'./styles.css';// Global Styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";function LoadingScreen(){const[visible,setVisible]=useState(true);const loadingScreenRef=useRef(null);useEffect(()=>{// Simulate data loading delay\nconst timeoutId=setTimeout(()=>{// Hide loading screen after data is loaded\nsetVisible(false);},1000);// 3 seconds delay (adjust as needed)\nreturn()=>clearTimeout(timeoutId);},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"loading-screen \".concat(visible?'fade-in':'fade-out'),ref:loadingScreenRef,children:/*#__PURE__*/_jsx(AnimatePresence,{children:visible&&/*#__PURE__*/_jsx(motion.img,{initial:{opacity:0}// Initial opacity and scale of the image\n,animate:{opacity:1,y:-33}// Fade in and scale in animation\n,exit:{opacity:0,scale:72}// Scale out animation when component exits\n,transition:{duration:1}// Duration of the animation\n,src:logo,className:\"App-logo\",alt:\"logo\"})})});}export default LoadingScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","logo","jsx","_jsx","LoadingScreen","visible","setVisible","loadingScreenRef","timeoutId","setTimeout","clearTimeout","className","concat","ref","children","img","initial","opacity","animate","y","exit","scale","transition","duration","src","alt"],"sources":["/Users/rafaelcarrillomunoz/Documents/GitHub/trinity.net/project-trinity/src/LoadingScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport logo from './trinity.svg';\nimport './LoadingScreen.css';\nimport './styles.css'; // Global Styling\n\n\n  \nfunction LoadingScreen() {\n\n    const [visible, setVisible] = useState(true);\n    const loadingScreenRef = useRef(null);\n    useEffect(() => {\n        // Simulate data loading delay\n        const timeoutId = setTimeout(() => {\n            // Hide loading screen after data is loaded\n            setVisible(false);\n\n        }, 1000); // 3 seconds delay (adjust as needed)\n        return () => clearTimeout(timeoutId);\n    }, []);\n    \n    return (\n        <div \n            className= {`loading-screen ${visible ? 'fade-in' : 'fade-out'}`} ref={loadingScreenRef}>\n            <AnimatePresence>\n                {visible && (\n                <motion.img     \n                initial={{ opacity: 0 }} // Initial opacity and scale of the image\n                animate={{ opacity: 1, y: -33 }} // Fade in and scale in animation\n                exit={{ opacity: 0, scale: 72 }} // Scale out animation when component exits\n                transition={{  duration: 1 }} // Duration of the animation\n                src={logo} className=\"App-logo\" alt=\"logo\" />\n                )}\n            </AnimatePresence>\n        </div>\n    );\n}\n\nexport default LoadingScreen;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CACvD,MAAO,CAAAC,IAAI,KAAM,eAAe,CAChC,MAAO,qBAAqB,CAC5B,MAAO,cAAc,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAIvB,QAAS,CAAAC,aAAaA,CAAA,CAAG,CAErB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAW,gBAAgB,CAAGT,MAAM,CAAC,IAAI,CAAC,CACrCD,SAAS,CAAC,IAAM,CACZ;AACA,KAAM,CAAAW,SAAS,CAAGC,UAAU,CAAC,IAAM,CAC/B;AACAH,UAAU,CAAC,KAAK,CAAC,CAErB,CAAC,CAAE,IAAI,CAAC,CAAE;AACV,MAAO,IAAMI,YAAY,CAACF,SAAS,CAAC,CACxC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIL,IAAA,QACIQ,SAAS,mBAAAC,MAAA,CAAqBP,OAAO,CAAG,SAAS,CAAG,UAAU,CAAG,CAACQ,GAAG,CAAEN,gBAAiB,CAAAO,QAAA,cACxFX,IAAA,CAACH,eAAe,EAAAc,QAAA,CACXT,OAAO,eACRF,IAAA,CAACJ,MAAM,CAACgB,GAAG,EACXC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAG;AAAA,CACzBC,OAAO,CAAE,CAAED,OAAO,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAC,EAAG,CAAG;AAAA,CACjCC,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEI,KAAK,CAAE,EAAG,CAAG;AAAA,CACjCC,UAAU,CAAE,CAAGC,QAAQ,CAAE,CAAE,CAAG;AAAA,CAC9BC,GAAG,CAAEvB,IAAK,CAACU,SAAS,CAAC,UAAU,CAACc,GAAG,CAAC,MAAM,CAAE,CAC3C,CACY,CAAC,CACjB,CAAC,CAEd,CAEA,cAAe,CAAArB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}